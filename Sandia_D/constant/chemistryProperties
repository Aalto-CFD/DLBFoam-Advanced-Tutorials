/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      chemistryProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

chemistry off;
initialChemicalTimeStep 1;

chemistryType
{
    solver            ode_LAPACK;
    method            loadBalanced_pyJac;
}

odeCoeffs
{
    solver          seulex_LAPACK;
    absTol          1e-10;
    relTol          1e-06;
}

loadbalancing
{
    active true;
    log true;
}

refmapping
{
    active  true;

    mixtureFractionProperties
    {
        // mixtureFraction class does not allow to redefine mixture fraction
        // equation. So here we have to use Bilger's definition.
        // In postprocessing it is recalculated in the way it is defined
        // in Sandia Flame experiment.
        oxidizerMassFractions // air coflow (humid air)
        {
            N2 0.77;
            O2 0.23;
            // H2O 0; // assume infinitesimal compared to N2 and O2
        }

        fuelMassFractions // main jet
        {
            CH4 1;
            // CH4 0.1561;
            // N2 0.6473;
            // O2 0.1966;
        }

        #include "$FOAM_CASE/constant/foam_mech/thermo.foam"
    }
    tolerance 1e-4;
    deltaT 1;
}

reactions{}

// ************************************************************************* //
